{"version":3,"sources":["services/notes.js","components/Note.js","components/NoteForm.js","components/Notification.js","components/ShowButton.js","App.js","index.js"],"names":["baseUrl","noteService","getAll","axios","get","then","res","data","create","newObject","post","deleteNote","id","delete","update","request","put","console","log","Note","note","toggleImportance","btnLabel","important","style","color","content","date","onClick","NoteForm","addNote","newNote","isImportant","handleChange","onSubmit","type","name","value","onChange","Notification","message","includes","border","background","ShowButton","showAll","toggleShowAll","App","useState","notes","setNotes","setNewNote","setIsImportant","setShowAll","setMessage","useEffect","initialNotes","find","updatedNote","returnedNote","map","setTimeout","catch","err","notesToShow","filter","e","target","checked","preventDefault","noteObject","Date","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8496b6be.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(res => res.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(res => res.data);\n};\n\nconst deleteNote = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(res => res.data);\n};\n\nconst update = (newObject, id) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  console.log('id:', id, 'obj:', newObject);\n  return request.then(res => res.data);\n};\n\nconst noteService = {\n  getAll,\n  create,\n  deleteNote,\n  update,\n};\n\nexport default noteService;\n","const Note = ({ note, toggleImportance }) => {\n  const btnLabel = note.important ? 'make not important' : 'make important';\n  return (\n    <li style={{ color: note.important ? 'red' : 'grey' }}>\n      {note.content} - written on {note.date}\n      <button onClick={() => toggleImportance(note.id)}>{btnLabel}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","const NoteForm = ({ addNote, newNote, isImportant, handleChange }) => {\n  return (\n    <form onSubmit={addNote}>\n      <label>\n        New Note:\n        <input\n          type=\"text\"\n          name=\"newNote\"\n          value={newNote}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Important\n        <input\n          type=\"checkbox\"\n          name=\"important\"\n          value={isImportant}\n          onChange={handleChange}\n        />\n      </label>\n      <button>Add</button>\n    </form>\n  );\n};\n\nexport default NoteForm;\n","const Notification = ({ message }) => {\n  const errorStyle = {\n    border: '3px solid hsla(9, 87%, 47%, 1)',\n    background: 'hsla(9, 87%, 47%, 0.6)',\n    color: 'red',\n  };\n  const confirmStyle = {\n    border: '3px solid hsla(110, 66%, 47%, 1)',\n    background: 'hsla(100, 66%, 47%, 0.6)',\n    color: 'green',\n  };\n  const style = message.includes('error') ? errorStyle : confirmStyle;\n  return (\n    <div style={style}>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","const ShowButton = ({ showAll, toggleShowAll }) => {\n  const btnLabel = showAll ? 'Show Important' : 'Show All';\n  return <button onClick={toggleShowAll}>{btnLabel}</button>;\n};\n\nexport default ShowButton;\n","import noteService from './services/notes';\nimport { useEffect, useState } from 'react';\nimport Note from './components/Note';\nimport NoteForm from './components/NoteForm';\nimport Notification from './components/Notification';\nimport ShowButton from './components/ShowButton';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [isImportant, setIsImportant] = useState(false);\n  const [showAll, setShowAll] = useState(true);\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => setNotes(initialNotes));\n  }, []);\n\n  const handleChange = e => {\n    const { value, type, checked } = e.target;\n    type === 'checkbox' ? setIsImportant(checked) : setNewNote(value);\n  };\n\n  const addNote = e => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: isImportant,\n    };\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n        setMessage('Note added');\n        setTimeout(() => setMessage(null), 5000);\n        setNewNote('');\n        setIsImportant(false);\n      })\n      .catch(err => {\n        setMessage(`The following error occured: ${err}`);\n        setTimeout(() => setMessage(null), 5000);\n      });\n  };\n\n  const toggleImportance = id => {\n    const note = notes.find(note => note.id === id);\n    const updatedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(updatedNote, id)\n      .then(returnedNote => {\n        setNotes(notes.map(note => (note.id !== id ? note : returnedNote)));\n        setMessage(`Note Updated`);\n        setTimeout(() => setMessage(null), 5000);\n      })\n      .catch(err => {\n        setMessage(`The following error occured: ${err}`);\n        setTimeout(() => setMessage(null), 5000);\n      });\n  };\n\n  const toggleShowAll = () => {\n    setShowAll(!showAll);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <h1>Bestest note app you can find</h1>\n      {message && <Notification message={message} />}\n      <ShowButton toggleShowAll={toggleShowAll} showAll={showAll} />\n      <ul>\n        {notesToShow.map(note => (\n          <Note key={note.id} note={note} toggleImportance={toggleImportance} />\n        ))}\n      </ul>\n      <NoteForm\n        newNote={newNote}\n        isImportant={isImportant}\n        handleChange={handleChange}\n        addNote={addNote}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}